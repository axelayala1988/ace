#!/usr/bin/env python3
"""
ACE CLI

Combines ansible-playbooks and tagging logic in a single, simple wrapper
"""

import os
import logging
import subprocess
import pwd

import click

CLI_VERSION = '0.0.3'
default_ansible_workdir = os.path.expanduser('~/ansible/')
default_user = pwd.getpwuid(os.getuid())[0]
install_targets = [
    'microk8s',
    'k8s',
    'gitea',
    'gitlab',
    'dt_oneagent',
    'dt_activegate',
    'keptn',
    'monaco',
    'jenkins',
    'dashboard',
    'awx',
    'cloudautomation'
]
uninstall_targets = []
enable_targets = [
    'demo_default',
    'demo_appsec',
    'demo_autorem',
    'hot_appsec',
    'demo_synthetic'
]

def set_log_level(
  verbosity,
):
    """Helper method to set log level."""
    if verbosity > 1:
        logging.basicConfig(level=logging.DEBUG)
    elif verbosity == 1:
        logging.basicConfig(level=logging.INFO)

    return


@click.group()
@click.option('-v', '--verbose', count=True, help='Prints additional debug messages.')
@click.version_option(version=CLI_VERSION)
def ace(
    verbose
):
    """This tool...

    ACTION can start with "prepare", "enable", "set", "install" or "uninstall".
    "enable" can be followed by an enable target, e.g. "demo_default", "demo_appsec", 
    ..., whereas "install" can be followed by an install target, e.g. "gitlab", ...

    For example:

    $ ace prepare
    > ...

    $ ace enable demo_default
    > ...

    $ ace install gitlab
    > ...
    """
    # If verbose flag is provided, log level will be set to DEBUG
    set_log_level(verbose)


@click.command()
@click.option(
    '--ansible-workdir',
    help=(
        'Please enter the directory of ACE-Box\'s main.yml.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_ANSIBLE_WORKDIR',
)
@click.option(
    '--user',
    help=(
        'Please enter the user ACE-Box conponents will be installed for.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_BOX_USER',
    default=default_user,
)
@click.option(
    '--ingress-domain',
    help='Please enter your public domain. If not set you\'ll be prompted during "prepare".',
    envvar='ACE_INGRESS_DOMAIN',
)
@click.option(
    '--ingress-protocol',
    help=(
        'Please enter the protocol you\'re using.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_INGRESS_PROTOCOL',
)
@click.option(
    '--dt-tenant',
    help=(
        'Please enter your Dynatrace tenant URL in the format of'
        'https://[environment-guid].live.dynatrace.com OR'
        'https://[managed-domain]/e/[environment-guid].'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_DT_TENANT',
)
@click.option(
    '--dt-api-token',
    help=(
        'Please enter your Dynatrace API token in format of \'dt0c01. ...\'.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_DT_API_TOKEN',
)
@click.option(
    '--dt-paas-token',
    help=(
        'Please enter your Dynatrace PaaS token in format of \'dt0c01. ...\'.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_DT_PAAS_TOKEN',
)
@click.option(
    '--ca-tenant',
    help=(
        'Please enter your Cloud Automation tenant URL'
    ),
    envvar='ACE_CA_TENANT',
)
@click.option(
    '--ca-api-token',
    help=(
        'Please enter your Cloud Automation API token'
    ),
    envvar='ACE_CA_API_TOKEN',
)
@click.option(
    '-f',
    '--force',
    is_flag=True,
    help='Overwrites any confirmation prompts.'
)
def prepare(
    ingress_domain,
    ingress_protocol,
    dt_tenant,
    dt_api_token,
    dt_paas_token,
    ca_tenant,
    ca_api_token,
    ansible_workdir,
    user,
    force,
):
    """Preparing ACE-Box"""
    logging.info('Preparing ACE-Box...')

    if not ingress_domain:
        ingress_domain = click.prompt('Please enter your public domain', default='127.0.0.1.nip.io')

    if not ingress_protocol:
        ingress_protocol = click.prompt('Please enter the protocol', default='http')

    if not dt_tenant:
        dt_tenant = click.prompt('Please enter your Dynatrace environment URL')

    if not dt_api_token:
        dt_api_token = click.prompt('Please enter your Dynatrace API token')

    if not dt_paas_token:
        dt_paas_token = click.prompt('Please enter your Dynatrace PaaS token')

    if not ansible_workdir:
        ansible_workdir = click.prompt(
            'Please enter Ansible work dir',
            default=default_ansible_workdir,
        )

    if not os.path.exists(ansible_workdir):
        click.echo(f'Path {ansible_workdir} doesn\'t exists!')
        return

    ace_config_file_path = os.path.join(os.path.expanduser(ansible_workdir), 'ace.config.yml')

    if os.path.exists(ace_config_file_path):
        if force:
            overwrite_hosts_file = True
        else:
            overwrite_hosts_file = click.confirm(
              f'{ace_config_file_path} already exists. Are you sure you want to overwrite it?'
            )

        if not overwrite_hosts_file:
            click.echo('Chose not to overwrite hosts file. Exiting...')
            return

    subprocess.run((
            'ansible-playbook -vv prepare.yml --extra-vars "'
            f'ingress_domain={ingress_domain} '
            f'ingress_protocol={ingress_protocol} '
            f'dynatrace_tenant_url={dt_tenant} '
            f'dynatrace_api_token={dt_api_token} '
            f'dynatrace_paas_token={dt_paas_token} '
            f'ca_tenant_url={ca_tenant} '
            f'ca_api_token={ca_api_token} '
            f'ace_box_user={user}'
            '"'
        ),
        cwd=ansible_workdir,
        shell=True,
        check=True,
    )
    click.echo('All set! You can now install components.')


@click.command()
@click.option(
    '--ansible-workdir',
    help=(
        'Please enter the directory of ACE-Box\'s main.yml.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_ANSIBLE_WORKDIR',
)
@click.option(
    '--user',
    help=(
        'Please enter the user ACE-Box conponents will be installed for.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_BOX_USER',
    default=default_user,
)
@click.argument(
    'target',
    type=click.Choice(
        install_targets,
        case_sensitive=True,
    ),
    nargs=1,
)
def install(
    target,
    ansible_workdir,
    user,
):
    """Installing ACE-Box components"""
    logging.info('Installing ACE-Box ({%s})...', target)

    if not ansible_workdir:
        ansible_workdir = click.prompt(
            'Please enter Ansible work dir',
            default=default_ansible_workdir
        )

    subprocess.run((
            f'ansible-playbook -vv main.yml --extra-vars "'
            f'ace_box_user={user}'
            '" '
            f'--tags "{target}"'
        ),
        cwd=ansible_workdir,
        shell=True,
        check=True,
    )

    click.echo(f'Successfully installed {target}')
    click.echo("You're welcome!")


@click.command()
@click.option(
    '--ansible-workdir',
    help=(
        'Please enter the directory of ACE-Box\'s main.yml.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_ANSIBLE_WORKDIR',
)
@click.option(
    '--user',
    help=(
        'Please enter the user ACE-Box conponents will be installed for.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_BOX_USER',
    default=default_user,
)
@click.argument(
    'target',
    type=click.Choice(
        uninstall_targets,
        case_sensitive=True,
    ),
    nargs=1,
)
def uninstall(
    target,
    ansible_workdir,
    user,
):
    """Uninstalling ACE-Box components"""
    logging.info('Uninstalling ACE-Box ({%s})...', target)

    if not ansible_workdir:
        ansible_workdir = click.prompt(
            'Please enter Ansible work dir',
            default=default_ansible_workdir,
        )

    tag = f'{target}_uninstall'
    subprocess.run((
            f'ansible-playbook -vv main.yml --extra-vars "'
            f'ace_box_user={user}'
            '" '
            f'--tags "{tag}"'
        ),
        cwd=ansible_workdir,
        shell=True,
        check=True,
    )

    click.echo(f'Uninstalled {target}!')


@click.command()
@click.option(
    '--ansible-workdir',
    help=(
        'Please enter the directory of ACE-Box\'s main.yml.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_ANSIBLE_WORKDIR',
)
@click.option(
    '--user',
    help=(
        'Please enter the user ACE-Box conponents will be installed for.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_BOX_USER',
    default=default_user,
)
@click.argument(
    'update',
    nargs=1,
)
def set(
    ansible_workdir,
    update,
    user,
):
    """Updating ACE-Box config"""
    [ace_config_key, ace_config_value] = update.split('=')

    logging.info('Updating config for ({%s})...', ace_config_key)

    if not ansible_workdir:
        ansible_workdir = click.prompt(
            'Please enter Ansible work dir',
            default=default_ansible_workdir,
        )

    subprocess.run((
            'ansible-playbook -vv config-update.yml --extra-vars "'
            f'ace_config_key={ace_config_key} '
            f'ace_config_value={ace_config_value} '
            f'ace_box_user={user}'
            '"'
        ),
        cwd=ansible_workdir,
        shell=True,
        check=True,
    )

    click.echo('All set!')


@click.command()
@click.option(
    '--ansible-workdir',
    help=(
        'Please enter the directory of ACE-Box\'s main.yml.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_ANSIBLE_WORKDIR',
)
@click.option(
    '--user',
    help=(
        'Please enter the user ACE-Box conponents will be installed for.'
        'If not set you\'ll be prompted during "prepare".'
    ),
    envvar='ACE_BOX_USER',
    default=default_user,
)
@click.argument(
    'target',
    type=click.Choice(
        enable_targets,
        case_sensitive=True,
    ),
    nargs=1,
)
def enable(
    target,
    ansible_workdir,
    user,
):
    """Enabling ACE-Box use case"""
    logging.info('Preparing ACE-Box for use case {%s}...', target)

    if not ansible_workdir:
        ansible_workdir = click.prompt(
            'Please enter Ansible work dir',
            default=default_ansible_workdir
        )

    subprocess.run((
            f'ansible-playbook main-v2.yml --extra-vars "'
            f'ace_box_user={user}'
            '" '
            f'--tags "{target}"'
        ),
        cwd=ansible_workdir,
        shell=True,
        check=True,
    )

    click.echo(f'Successfully installed {target}')
    click.echo("You're welcome!")

ace.add_command(prepare)
ace.add_command(install)
ace.add_command(uninstall)
ace.add_command(set)
ace.add_command(enable)

if __name__ == '__main__':
    # pylint: disable=unexpected-keyword-arg,no-value-for-parameter
    ace(auto_envvar_prefix='ACE')
